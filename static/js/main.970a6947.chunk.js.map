{"version":3,"sources":["components/Header.js","components/SearchBar.js","components/EmployeeGrid.js","App.js","index.js"],"names":["Header","Jumbotron","style","color","fontSize","backgroundColor","SearchBar","props","width","marginLeft","InputGroup","size","className","Prepend","Text","id","FormControl","aria-label","aria-describedby","value","search","onChange","onSearch","EmployeeGrid","employees","config","React","useState","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","a","b","key","direction","requestSort","useSortableData","Table","striped","bordered","hover","map","employee","src","image","alt","occupation","name","email","phone","App","Employees","employeeList","searchVal","setSearchVal","searchResult","filter","result","searchByName","toLowerCase","includes","searchByOccu","searchByEmail","searchByPhone","event","target","ReactDOM","render","document","getElementById"],"mappings":"uuWAceA,MAXf,WACI,OACH,kBAACC,EAAA,EAAD,KACC,wBAAIC,MAAQ,CAACC,MAAO,WAAaC,SAAS,OAAQC,gBAAgB,UAAlE,yBACA,+G,eCqBaC,MAxBf,SAAmBC,GACjB,OACE,yBACEL,MAAO,CACLM,MAAO,MACPC,WAAY,QAGd,kBAACC,EAAA,EAAD,CAAYC,KAAK,KAAKC,UAAU,QAC9B,kBAACF,EAAA,EAAWG,QAAZ,KACE,kBAACH,EAAA,EAAWI,KAAZ,CAAiBC,GAAG,wBAApB,aAEF,kBAACC,EAAA,EAAD,CACEC,aAAW,QACXC,mBAAiB,uBACjBC,MAASZ,EAAMa,OACfC,SAAUd,EAAMe,SAChBP,GAAG,Y,gBCkDEQ,EAlCM,SAAChB,GAAW,IACvBiB,EAnCc,SAACA,GAA8B,IAAnBC,EAAkB,uDAAT,KAAS,EAChBC,IAAMC,SAASF,GADC,mBAC7CG,EAD6C,KACjCC,EADiC,KAG9CC,EAAcJ,IAAMK,SAAQ,WAChC,IAAIC,EAAa,YAAOR,GAYxB,OAXmB,OAAfI,GACFI,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAID,EAAEN,EAAWQ,KAAOD,EAAEP,EAAWQ,KACH,cAAzBR,EAAWS,WAA6B,EAAI,EAEjDH,EAAEN,EAAWQ,KAAOD,EAAEP,EAAWQ,KACH,cAAzBR,EAAWS,UAA4B,GAAK,EAE9C,KAGJL,IACN,CAACR,EAAWI,IAETU,EAAc,SAACF,GACnB,IAAIC,EAAY,YAEdT,GACAA,EAAWQ,MAAQA,GACM,cAAzBR,EAAWS,YAEXA,EAAY,cAEdR,EAAc,CAAEO,MAAKC,eAGvB,MAAO,CAAEb,UAAWM,EAAaQ,cAAaV,cAIxBW,CAAgBhC,EAAMiB,WAApCA,UAGR,OACE,kBAACgB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,6BACA,qCACA,0CACA,oCACA,qCACA,uCAGJ,+BACGnB,EAAUoB,KAAI,SAAAC,GACb,OACE,4BACE,4BAAKA,EAAS9B,IACd,4BAAI,yBAAK+B,IAAKD,EAASE,MAAOC,IAAI,sBAClC,4BAAKH,EAASI,YACd,4BAAKJ,EAASK,MACd,4BAAKL,EAASM,OACd,4BAAKN,EAASO,c,QC1BbC,EA7BH,WAAO,IAAD,EAEO3B,IAAMC,SAAS2B,GAA/BC,EAFS,sBAGkB7B,IAAMC,SAAS,IAHjC,mBAGT6B,EAHS,KAGEC,EAHF,KASVC,EAAeH,EAAaI,QAAO,SAAAC,GACvC,IAAMC,EAAeD,EAAOV,KAAKY,cAAcC,SAASP,EAAUM,eAC5DE,EAAeJ,EAAOX,WAAWa,cAAcC,SAASP,EAAUM,eAClEG,EAAgBL,EAAOT,MAAMW,cAAcC,SAASP,EAAUM,eAC9DI,EAAgBN,EAAOR,MAAMU,cAAcC,SAASP,EAAUM,eACpE,OAAOD,GAAgBG,GAAgBC,GAAiBC,KAG1D,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAW5C,SAfO,SAAC6C,GACrBV,EAAaU,EAAMC,OAAOjD,QAcYC,OAAQoC,IAC5C,kBAAC,EAAD,CAAchC,UAAakC,M,MCrBjCW,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.970a6947.chunk.js","sourcesContent":["import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nfunction Header() {\n    return (\n <Jumbotron>\n  <h1 style ={{color: \"darkgrey\" , fontSize:\"40px\", backgroundColor:\"white\"}}>Employee Directory !!</h1>\n  <p>\n       This is a table of employee , search the employee you need with their detail ! \n  </p>\n </Jumbotron>\n    )\n}\n\nexport default Header;","import React from \"react\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nfunction SearchBar(props) {\n  return (\n    <div\n      style={{\n        width: \"50%\",\n        marginLeft: \"25%\",\n      }}\n    >\n      <InputGroup size=\"sm\" className=\"mb-3\">\n        <InputGroup.Prepend>\n          <InputGroup.Text id=\"inputGroup-sizing-sm\"> Search </InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          aria-label=\"Small\"\n          aria-describedby=\"inputGroup-sizing-sm\"\n          value = {props.search}\n          onChange={props.onSearch}\n          id='term'\n        />\n      </InputGroup>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport { Table } from 'react-bootstrap';\n\nconst useSortableData = (employees, config = null) => {\n  const [sortConfig, setSortConfig] = React.useState(config);\n\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...employees];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [employees, sortConfig]);\n\n  const requestSort = (key) => {\n    let direction = 'ascending';\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === 'ascending'\n    ) {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return { employees: sortedItems, requestSort, sortConfig };\n};\n\nconst EmployeeGrid = (props) => {\n  const { employees } = useSortableData(props.employees);\n\n\n  return (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th></th>\n          <th>Image</th>\n          <th>Occupation</th>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Phone</th>\n        </tr>\n      </thead>\n      <tbody>\n        {employees.map(employee => {\n          return (\n            <tr>\n              <td>{employee.id}</td>\n              <td><img src={employee.image} alt=\"employee_picture\"></img></td>\n              <td>{employee.occupation}</td>\n              <td>{employee.name}</td>\n              <td>{employee.email}</td>\n              <td>{employee.phone}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default EmployeeGrid;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport EmployeeGrid from './components/EmployeeGrid';\nimport Employees from \"./employeeList.json\";\n\nconst App = () => {\n\n  const [employeeList] = React.useState(Employees);\n  const [searchVal, setSearchVal] = React.useState('');\n\n  const searchHandler = (event) => {\n    setSearchVal(event.target.value);\n  }\n\n  const searchResult = employeeList.filter(result => {\n    const searchByName = result.name.toLowerCase().includes(searchVal.toLowerCase());\n    const searchByOccu = result.occupation.toLowerCase().includes(searchVal.toLowerCase());\n    const searchByEmail = result.email.toLowerCase().includes(searchVal.toLowerCase());\n    const searchByPhone = result.phone.toLowerCase().includes(searchVal.toLowerCase());\n    return searchByName || searchByOccu || searchByEmail || searchByPhone ;\n  })\n\n  return (\n    <div>\n      <Header/>\n      <SearchBar onSearch={searchHandler} search={searchVal}/>\n      <EmployeeGrid employees = {searchResult}/>\n    </div>\n  )\n\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}